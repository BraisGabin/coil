public final class coil/ComponentRegistry {
	public fun <init> ()V
	public synthetic fun <init> (Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getDecoderFactories ()Ljava/util/List;
	public final fun getFetcherFactories ()Ljava/util/List;
	public final fun getInterceptors ()Ljava/util/List;
	public final fun getKeyers ()Ljava/util/List;
	public final fun getMappers ()Ljava/util/List;
	public final fun key (Ljava/lang/Object;Lcoil/request/Options;)Ljava/lang/String;
	public final fun map (Ljava/lang/Object;Lcoil/request/Options;)Ljava/lang/Object;
	public final fun newBuilder ()Lcoil/ComponentRegistry$Builder;
	public final fun newDecoder (Lcoil/fetch/SourceFetchResult;Lcoil/request/Options;Lcoil/ImageLoader;)Lkotlin/Pair;
	public final fun newDecoder (Lcoil/fetch/SourceFetchResult;Lcoil/request/Options;Lcoil/ImageLoader;I)Lkotlin/Pair;
	public static synthetic fun newDecoder$default (Lcoil/ComponentRegistry;Lcoil/fetch/SourceFetchResult;Lcoil/request/Options;Lcoil/ImageLoader;IILjava/lang/Object;)Lkotlin/Pair;
	public final fun newFetcher (Ljava/lang/Object;Lcoil/request/Options;Lcoil/ImageLoader;)Lkotlin/Pair;
	public final fun newFetcher (Ljava/lang/Object;Lcoil/request/Options;Lcoil/ImageLoader;I)Lkotlin/Pair;
	public static synthetic fun newFetcher$default (Lcoil/ComponentRegistry;Ljava/lang/Object;Lcoil/request/Options;Lcoil/ImageLoader;IILjava/lang/Object;)Lkotlin/Pair;
}

public final class coil/ComponentRegistry$Builder {
	public fun <init> ()V
	public fun <init> (Lcoil/ComponentRegistry;)V
	public final fun add (Lcoil/decode/Decoder$Factory;)Lcoil/ComponentRegistry$Builder;
	public final fun add (Lcoil/fetch/Fetcher$Factory;Lkotlin/reflect/KClass;)Lcoil/ComponentRegistry$Builder;
	public final fun add (Lcoil/intercept/Interceptor;)Lcoil/ComponentRegistry$Builder;
	public final fun add (Lcoil/key/Keyer;Lkotlin/reflect/KClass;)Lcoil/ComponentRegistry$Builder;
	public final fun add (Lcoil/map/Mapper;Lkotlin/reflect/KClass;)Lcoil/ComponentRegistry$Builder;
	public final fun build ()Lcoil/ComponentRegistry;
}

public abstract class coil/EventListener : coil/request/ImageRequest$Listener {
	public static final field Companion Lcoil/EventListener$Companion;
	public fun <init> ()V
	public fun decodeEnd (Lcoil/request/ImageRequest;Lcoil/decode/Decoder;Lcoil/request/Options;Lcoil/decode/DecodeResult;)V
	public fun decodeStart (Lcoil/request/ImageRequest;Lcoil/decode/Decoder;Lcoil/request/Options;)V
	public fun fetchEnd (Lcoil/request/ImageRequest;Lcoil/fetch/Fetcher;Lcoil/request/Options;Lcoil/fetch/FetchResult;)V
	public fun fetchStart (Lcoil/request/ImageRequest;Lcoil/fetch/Fetcher;Lcoil/request/Options;)V
	public fun keyEnd (Lcoil/request/ImageRequest;Ljava/lang/String;)V
	public fun keyStart (Lcoil/request/ImageRequest;Ljava/lang/Object;)V
	public fun mapEnd (Lcoil/request/ImageRequest;Ljava/lang/Object;)V
	public fun mapStart (Lcoil/request/ImageRequest;Ljava/lang/Object;)V
	public fun onCancel (Lcoil/request/ImageRequest;)V
	public fun onError (Lcoil/request/ImageRequest;Lcoil/request/ErrorResult;)V
	public fun onStart (Lcoil/request/ImageRequest;)V
	public fun onSuccess (Lcoil/request/ImageRequest;Lcoil/request/SuccessResult;)V
	public fun resolveSizeEnd (Lcoil/request/ImageRequest;Lcoil/size/Size;)V
	public fun resolveSizeStart (Lcoil/request/ImageRequest;)V
}

public final class coil/EventListener$Companion {
	public final fun getNONE ()Lcoil/EventListener;
}

public abstract interface class coil/EventListener$Factory {
	public static final field Companion Lcoil/EventListener$Factory$Companion;
	public abstract fun create (Lcoil/request/ImageRequest;)Lcoil/EventListener;
}

public final class coil/EventListener$Factory$Companion {
	public final fun getNONE ()Lcoil/EventListener$Factory;
}

public final class coil/Extras {
	public static final field Companion Lcoil/Extras$Companion;
	public static final field EMPTY Lcoil/Extras;
	public synthetic fun <init> (Ljava/util/Map;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun asMap ()Ljava/util/Map;
	public fun equals (Ljava/lang/Object;)Z
	public final fun get (Lcoil/Extras$Key;)Ljava/lang/Object;
	public fun hashCode ()I
	public final fun newBuilder ()Lcoil/Extras$Builder;
	public fun toString ()Ljava/lang/String;
}

public final class coil/Extras$Builder {
	public fun <init> ()V
	public fun <init> (Lcoil/Extras;)V
	public final fun build ()Lcoil/Extras;
	public final fun set (Lcoil/Extras$Key;Ljava/lang/Object;)Lcoil/Extras$Builder;
	public final fun setAll (Lcoil/Extras;)Lcoil/Extras$Builder;
}

public final class coil/Extras$Companion {
}

public final class coil/Extras$Key {
	public static final field Companion Lcoil/Extras$Key$Companion;
	public fun <init> (Ljava/lang/Object;)V
	public final fun getDefault ()Ljava/lang/Object;
}

public final class coil/Extras$Key$Companion {
}

public final class coil/ExtrasKt {
	public static final fun getExtra (Lcoil/request/ImageRequest;Lcoil/Extras$Key;)Ljava/lang/Object;
	public static final fun getExtra (Lcoil/request/Options;Lcoil/Extras$Key;)Ljava/lang/Object;
	public static final fun getOrDefault (Lcoil/Extras;Lcoil/Extras$Key;)Ljava/lang/Object;
	public static final fun orEmpty (Lcoil/Extras;)Lcoil/Extras;
}

public abstract interface class coil/Image {
	public abstract fun getHeight ()I
	public abstract fun getShareable ()Z
	public abstract fun getSize ()J
	public abstract fun getWidth ()I
}

public final class coil/ImageKt {
	public static final fun asCoilImage (Lorg/jetbrains/skia/Image;Z)Lcoil/Image;
	public static final fun getImage (Lcoil/Image;)Lorg/jetbrains/skia/Image;
}

public abstract interface class coil/ImageLoader {
	public abstract fun enqueue (Lcoil/request/ImageRequest;)Lcoil/request/Disposable;
	public abstract fun execute (Lcoil/request/ImageRequest;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getComponents ()Lcoil/ComponentRegistry;
	public abstract fun getDefaults ()Lcoil/request/ImageRequest$Defaults;
	public abstract fun getDiskCache ()Lcoil/disk/DiskCache;
	public abstract fun getMemoryCache ()Lcoil/memory/MemoryCache;
	public abstract fun newBuilder ()Lcoil/ImageLoader$Builder;
	public abstract fun shutdown ()V
}

public final class coil/ImageLoader$Builder {
	public fun <init> (Lcoil/PlatformContext;)V
	public final fun build ()Lcoil/ImageLoader;
	public final fun components (Lcoil/ComponentRegistry;)Lcoil/ImageLoader$Builder;
	public final synthetic fun components (Lkotlin/jvm/functions/Function1;)Lcoil/ImageLoader$Builder;
	public final fun decoderDispatcher (Lkotlinx/coroutines/CoroutineDispatcher;)Lcoil/ImageLoader$Builder;
	public final fun diskCache (Lcoil/disk/DiskCache;)Lcoil/ImageLoader$Builder;
	public final fun diskCache (Lkotlin/jvm/functions/Function0;)Lcoil/ImageLoader$Builder;
	public final fun diskCachePolicy (Lcoil/request/CachePolicy;)Lcoil/ImageLoader$Builder;
	public final fun dispatcher (Lkotlinx/coroutines/CoroutineDispatcher;)Lcoil/ImageLoader$Builder;
	public final fun error (Lcoil/Image;)Lcoil/ImageLoader$Builder;
	public final fun error (Lkotlin/jvm/functions/Function0;)Lcoil/ImageLoader$Builder;
	public final fun eventListener (Lcoil/EventListener;)Lcoil/ImageLoader$Builder;
	public final fun eventListenerFactory (Lcoil/EventListener$Factory;)Lcoil/ImageLoader$Builder;
	public final fun fallback (Lcoil/Image;)Lcoil/ImageLoader$Builder;
	public final fun fallback (Lkotlin/jvm/functions/Function0;)Lcoil/ImageLoader$Builder;
	public final fun fetcherDispatcher (Lkotlinx/coroutines/CoroutineDispatcher;)Lcoil/ImageLoader$Builder;
	public final fun getExtras ()Lcoil/Extras$Builder;
	public final fun interceptorDispatcher (Lkotlinx/coroutines/CoroutineDispatcher;)Lcoil/ImageLoader$Builder;
	public final fun logger (Lcoil/util/Logger;)Lcoil/ImageLoader$Builder;
	public final fun memoryCache (Lcoil/memory/MemoryCache;)Lcoil/ImageLoader$Builder;
	public final fun memoryCache (Lkotlin/jvm/functions/Function0;)Lcoil/ImageLoader$Builder;
	public final fun memoryCachePolicy (Lcoil/request/CachePolicy;)Lcoil/ImageLoader$Builder;
	public final fun networkCachePolicy (Lcoil/request/CachePolicy;)Lcoil/ImageLoader$Builder;
	public final fun placeholder (Lcoil/Image;)Lcoil/ImageLoader$Builder;
	public final fun placeholder (Lkotlin/jvm/functions/Function0;)Lcoil/ImageLoader$Builder;
	public final fun precision (Lcoil/size/Precision;)Lcoil/ImageLoader$Builder;
}

public final class coil/ImageLoaders_commonKt {
	public static final fun ImageLoader (Lcoil/PlatformContext;)Lcoil/ImageLoader;
	public static final fun addLastModifiedToFileCacheKey (Lcoil/ImageLoader$Builder;Z)Lcoil/ImageLoader$Builder;
	public static final fun networkObserverEnabled (Lcoil/ImageLoader$Builder;Z)Lcoil/ImageLoader$Builder;
}

public final class coil/ImageLoaders_nonJsKt {
	public static final fun executeBlocking (Lcoil/ImageLoader;Lcoil/request/ImageRequest;)Lcoil/request/ImageResult;
}

public abstract class coil/PlatformContext {
	public static final field Companion Lcoil/PlatformContext$Companion;
	public static final field INSTANCE Lcoil/PlatformContext;
}

public final class coil/PlatformContext$Companion {
}

public final class coil/Uri {
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAuthority ()Ljava/lang/String;
	public final fun getFragment ()Ljava/lang/String;
	public final fun getPath ()Ljava/lang/String;
	public final fun getQuery ()Ljava/lang/String;
	public final fun getScheme ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class coil/UriKt {
	public static final fun getPathSegments (Lcoil/Uri;)Ljava/util/List;
	public static final fun toUri (Ljava/lang/String;)Lcoil/Uri;
}

public abstract interface annotation class coil/annotation/ExperimentalCoilApi : java/lang/annotation/Annotation {
}

public abstract interface annotation class coil/annotation/InternalCoilApi : java/lang/annotation/Annotation {
}

public final class coil/decode/DataSource : java/lang/Enum {
	public static final field DISK Lcoil/decode/DataSource;
	public static final field MEMORY Lcoil/decode/DataSource;
	public static final field MEMORY_CACHE Lcoil/decode/DataSource;
	public static final field NETWORK Lcoil/decode/DataSource;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lcoil/decode/DataSource;
	public static fun values ()[Lcoil/decode/DataSource;
}

public final class coil/decode/DecodeResult {
	public fun <init> (Lcoil/Image;Z)V
	public final fun component1 ()Lcoil/Image;
	public final fun component2 ()Z
	public final fun copy (Lcoil/Image;Z)Lcoil/decode/DecodeResult;
	public static synthetic fun copy$default (Lcoil/decode/DecodeResult;Lcoil/Image;ZILjava/lang/Object;)Lcoil/decode/DecodeResult;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getImage ()Lcoil/Image;
	public fun hashCode ()I
	public final fun isSampled ()Z
	public fun toString ()Ljava/lang/String;
}

public final class coil/decode/DecodeUtils {
	public static final field INSTANCE Lcoil/decode/DecodeUtils;
	public static final fun calculateInSampleSize (IIIILcoil/size/Scale;)I
	public static final fun computeSizeMultiplier (DDDDLcoil/size/Scale;)D
	public static final fun computeSizeMultiplier (FFFFLcoil/size/Scale;)F
	public static final fun computeSizeMultiplier (IIIILcoil/size/Scale;)D
}

public abstract interface class coil/decode/Decoder {
	public abstract fun decode (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class coil/decode/Decoder$Factory {
	public abstract fun create (Lcoil/fetch/SourceFetchResult;Lcoil/request/Options;Lcoil/ImageLoader;)Lcoil/decode/Decoder;
}

public abstract interface class coil/decode/ImageSource : java/io/Closeable {
	public abstract fun file ()Lokio/Path;
	public abstract fun fileOrNull ()Lokio/Path;
	public abstract fun getFileSystem ()Lokio/FileSystem;
	public abstract fun getMetadata ()Lcoil/decode/ImageSource$Metadata;
	public abstract fun source ()Lokio/BufferedSource;
	public abstract fun sourceOrNull ()Lokio/BufferedSource;
}

public abstract class coil/decode/ImageSource$Metadata {
	public fun <init> ()V
}

public final class coil/decode/ImageSourceKt {
	public static final fun create (Lokio/BufferedSource;Lokio/FileSystem;Lcoil/decode/ImageSource$Metadata;)Lcoil/decode/ImageSource;
	public static final fun create (Lokio/Path;Lokio/FileSystem;Ljava/lang/String;Ljava/io/Closeable;Lcoil/decode/ImageSource$Metadata;)Lcoil/decode/ImageSource;
	public static synthetic fun create$default (Lokio/BufferedSource;Lokio/FileSystem;Lcoil/decode/ImageSource$Metadata;ILjava/lang/Object;)Lcoil/decode/ImageSource;
	public static synthetic fun create$default (Lokio/Path;Lokio/FileSystem;Ljava/lang/String;Ljava/io/Closeable;Lcoil/decode/ImageSource$Metadata;ILjava/lang/Object;)Lcoil/decode/ImageSource;
}

public final class coil/decode/SkiaImageDecoder : coil/decode/Decoder {
	public fun <init> (Lcoil/decode/ImageSource;Lcoil/request/Options;)V
	public fun decode (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class coil/decode/SkiaImageDecoder$Factory : coil/decode/Decoder$Factory {
	public fun <init> ()V
	public fun create (Lcoil/fetch/SourceFetchResult;Lcoil/request/Options;Lcoil/ImageLoader;)Lcoil/decode/Decoder;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public abstract interface class coil/disk/DiskCache {
	public abstract fun clear ()V
	public abstract fun getDirectory ()Lokio/Path;
	public abstract fun getFileSystem ()Lokio/FileSystem;
	public abstract fun getMaxSize ()J
	public abstract fun getSize ()J
	public abstract fun openEditor (Ljava/lang/String;)Lcoil/disk/DiskCache$Editor;
	public abstract fun openSnapshot (Ljava/lang/String;)Lcoil/disk/DiskCache$Snapshot;
	public abstract fun remove (Ljava/lang/String;)Z
}

public final class coil/disk/DiskCache$Builder {
	public fun <init> ()V
	public final fun build ()Lcoil/disk/DiskCache;
	public final fun cleanupDispatcher (Lkotlinx/coroutines/CoroutineDispatcher;)Lcoil/disk/DiskCache$Builder;
	public final fun directory (Lokio/Path;)Lcoil/disk/DiskCache$Builder;
	public final fun fileSystem (Lokio/FileSystem;)Lcoil/disk/DiskCache$Builder;
	public final fun maxSizeBytes (J)Lcoil/disk/DiskCache$Builder;
	public final fun maxSizePercent (D)Lcoil/disk/DiskCache$Builder;
	public final fun maximumMaxSizeBytes (J)Lcoil/disk/DiskCache$Builder;
	public final fun minimumMaxSizeBytes (J)Lcoil/disk/DiskCache$Builder;
}

public abstract interface class coil/disk/DiskCache$Editor {
	public abstract fun abort ()V
	public abstract fun commit ()V
	public abstract fun commitAndOpenSnapshot ()Lcoil/disk/DiskCache$Snapshot;
	public abstract fun getData ()Lokio/Path;
	public abstract fun getMetadata ()Lokio/Path;
}

public abstract interface class coil/disk/DiskCache$Snapshot : java/io/Closeable {
	public abstract fun close ()V
	public abstract fun closeAndOpenEditor ()Lcoil/disk/DiskCache$Editor;
	public abstract fun getData ()Lokio/Path;
	public abstract fun getMetadata ()Lokio/Path;
}

public final class coil/disk/DiskCacheKt {
	public static final fun directory (Lcoil/disk/DiskCache$Builder;Ljava/io/File;)Lcoil/disk/DiskCache$Builder;
}

public abstract interface class coil/fetch/FetchResult {
}

public abstract interface class coil/fetch/Fetcher {
	public abstract fun fetch (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class coil/fetch/Fetcher$Factory {
	public abstract fun create (Ljava/lang/Object;Lcoil/request/Options;Lcoil/ImageLoader;)Lcoil/fetch/Fetcher;
}

public final class coil/fetch/ImageFetchResult : coil/fetch/FetchResult {
	public fun <init> (Lcoil/Image;ZLcoil/decode/DataSource;)V
	public final fun component1 ()Lcoil/Image;
	public final fun component2 ()Z
	public final fun component3 ()Lcoil/decode/DataSource;
	public final fun copy (Lcoil/Image;ZLcoil/decode/DataSource;)Lcoil/fetch/ImageFetchResult;
	public static synthetic fun copy$default (Lcoil/fetch/ImageFetchResult;Lcoil/Image;ZLcoil/decode/DataSource;ILjava/lang/Object;)Lcoil/fetch/ImageFetchResult;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDataSource ()Lcoil/decode/DataSource;
	public final fun getImage ()Lcoil/Image;
	public fun hashCode ()I
	public final fun isSampled ()Z
	public fun toString ()Ljava/lang/String;
}

public final class coil/fetch/SourceFetchResult : coil/fetch/FetchResult {
	public fun <init> (Lcoil/decode/ImageSource;Ljava/lang/String;Lcoil/decode/DataSource;)V
	public final fun component1 ()Lcoil/decode/ImageSource;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Lcoil/decode/DataSource;
	public final fun copy (Lcoil/decode/ImageSource;Ljava/lang/String;Lcoil/decode/DataSource;)Lcoil/fetch/SourceFetchResult;
	public static synthetic fun copy$default (Lcoil/fetch/SourceFetchResult;Lcoil/decode/ImageSource;Ljava/lang/String;Lcoil/decode/DataSource;ILjava/lang/Object;)Lcoil/fetch/SourceFetchResult;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDataSource ()Lcoil/decode/DataSource;
	public final fun getMimeType ()Ljava/lang/String;
	public final fun getSource ()Lcoil/decode/ImageSource;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class coil/intercept/Interceptor {
	public abstract fun intercept (Lcoil/intercept/Interceptor$Chain;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class coil/intercept/Interceptor$Chain {
	public abstract fun getRequest ()Lcoil/request/ImageRequest;
	public abstract fun getSize ()Lcoil/size/Size;
	public fun proceed (Lcoil/request/ImageRequest;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun proceed (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun proceed$suspendImpl (Lcoil/intercept/Interceptor$Chain;Lcoil/request/ImageRequest;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withRequest (Lcoil/request/ImageRequest;)Lcoil/intercept/Interceptor$Chain;
	public abstract fun withSize (Lcoil/size/Size;)Lcoil/intercept/Interceptor$Chain;
}

public final class coil/key/FileUriKeyer : coil/key/Keyer {
	public fun <init> (Z)V
	public fun key (Lcoil/Uri;Lcoil/request/Options;)Ljava/lang/String;
	public synthetic fun key (Ljava/lang/Object;Lcoil/request/Options;)Ljava/lang/String;
}

public abstract interface class coil/key/Keyer {
	public abstract fun key (Ljava/lang/Object;Lcoil/request/Options;)Ljava/lang/String;
}

public final class coil/map/FileMapper : coil/map/Mapper {
	public fun <init> ()V
	public fun map (Ljava/io/File;Lcoil/request/Options;)Lcoil/Uri;
	public synthetic fun map (Ljava/lang/Object;Lcoil/request/Options;)Ljava/lang/Object;
}

public abstract interface class coil/map/Mapper {
	public abstract fun map (Ljava/lang/Object;Lcoil/request/Options;)Ljava/lang/Object;
}

public abstract interface class coil/memory/MemoryCache {
	public abstract fun clear ()V
	public abstract fun get (Lcoil/memory/MemoryCache$Key;)Lcoil/memory/MemoryCache$Value;
	public abstract fun getKeys ()Ljava/util/Set;
	public abstract fun getMaxSize ()J
	public abstract fun getSize ()J
	public abstract fun remove (Lcoil/memory/MemoryCache$Key;)Z
	public abstract fun set (Lcoil/memory/MemoryCache$Key;Lcoil/memory/MemoryCache$Value;)V
	public abstract fun trimToSize (J)V
}

public final class coil/memory/MemoryCache$Builder {
	public fun <init> ()V
	public final fun build ()Lcoil/memory/MemoryCache;
	public final fun maxSizeBytes (J)Lcoil/memory/MemoryCache$Builder;
	public final fun maxSizeBytes (Lkotlin/jvm/functions/Function0;)Lcoil/memory/MemoryCache$Builder;
	public final fun maxSizePercent (Lcoil/PlatformContext;D)Lcoil/memory/MemoryCache$Builder;
	public static synthetic fun maxSizePercent$default (Lcoil/memory/MemoryCache$Builder;Lcoil/PlatformContext;DILjava/lang/Object;)Lcoil/memory/MemoryCache$Builder;
	public final fun strongReferencesEnabled (Z)Lcoil/memory/MemoryCache$Builder;
	public final fun weakReferencesEnabled (Z)Lcoil/memory/MemoryCache$Builder;
}

public final class coil/memory/MemoryCache$Key {
	public fun <init> (Ljava/lang/String;Ljava/util/Map;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/util/Map;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/util/Map;
	public final fun copy (Ljava/lang/String;Ljava/util/Map;)Lcoil/memory/MemoryCache$Key;
	public static synthetic fun copy$default (Lcoil/memory/MemoryCache$Key;Ljava/lang/String;Ljava/util/Map;ILjava/lang/Object;)Lcoil/memory/MemoryCache$Key;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getExtras ()Ljava/util/Map;
	public final fun getKey ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class coil/memory/MemoryCache$Value {
	public fun <init> (Lcoil/Image;Ljava/util/Map;)V
	public synthetic fun <init> (Lcoil/Image;Ljava/util/Map;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lcoil/Image;
	public final fun component2 ()Ljava/util/Map;
	public final fun copy (Lcoil/Image;Ljava/util/Map;)Lcoil/memory/MemoryCache$Value;
	public static synthetic fun copy$default (Lcoil/memory/MemoryCache$Value;Lcoil/Image;Ljava/util/Map;ILjava/lang/Object;)Lcoil/memory/MemoryCache$Value;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getExtras ()Ljava/util/Map;
	public final fun getImage ()Lcoil/Image;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class coil/request/CachePolicy : java/lang/Enum {
	public static final field DISABLED Lcoil/request/CachePolicy;
	public static final field ENABLED Lcoil/request/CachePolicy;
	public static final field READ_ONLY Lcoil/request/CachePolicy;
	public static final field WRITE_ONLY Lcoil/request/CachePolicy;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public final fun getReadEnabled ()Z
	public final fun getWriteEnabled ()Z
	public static fun valueOf (Ljava/lang/String;)Lcoil/request/CachePolicy;
	public static fun values ()[Lcoil/request/CachePolicy;
}

public abstract interface class coil/request/Disposable {
	public abstract fun dispose ()V
	public abstract fun getJob ()Lkotlinx/coroutines/Deferred;
	public abstract fun isDisposed ()Z
}

public final class coil/request/ErrorResult : coil/request/ImageResult {
	public fun <init> (Lcoil/Image;Lcoil/request/ImageRequest;Ljava/lang/Throwable;)V
	public final fun component1 ()Lcoil/Image;
	public final fun component2 ()Lcoil/request/ImageRequest;
	public final fun component3 ()Ljava/lang/Throwable;
	public final fun copy (Lcoil/Image;Lcoil/request/ImageRequest;Ljava/lang/Throwable;)Lcoil/request/ErrorResult;
	public static synthetic fun copy$default (Lcoil/request/ErrorResult;Lcoil/Image;Lcoil/request/ImageRequest;Ljava/lang/Throwable;ILjava/lang/Object;)Lcoil/request/ErrorResult;
	public fun equals (Ljava/lang/Object;)Z
	public fun getImage ()Lcoil/Image;
	public fun getRequest ()Lcoil/request/ImageRequest;
	public final fun getThrowable ()Ljava/lang/Throwable;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class coil/request/ImageRequest {
	public synthetic fun <init> (Lcoil/PlatformContext;Ljava/lang/Object;Lcoil/target/Target;Lcoil/request/ImageRequest$Listener;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;Lkotlin/Pair;Lcoil/decode/Decoder$Factory;Lkotlinx/coroutines/CoroutineDispatcher;Lkotlinx/coroutines/CoroutineDispatcher;Lkotlinx/coroutines/CoroutineDispatcher;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;Lcoil/memory/MemoryCache$Key;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lcoil/size/SizeResolver;Lcoil/size/Scale;Lcoil/size/Precision;Lcoil/Extras;Lcoil/request/ImageRequest$Defined;Lcoil/request/ImageRequest$Defaults;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getContext ()Lcoil/PlatformContext;
	public final fun getData ()Ljava/lang/Object;
	public final fun getDecoderDispatcher ()Lkotlinx/coroutines/CoroutineDispatcher;
	public final fun getDecoderFactory ()Lcoil/decode/Decoder$Factory;
	public final fun getDefaults ()Lcoil/request/ImageRequest$Defaults;
	public final fun getDefined ()Lcoil/request/ImageRequest$Defined;
	public final fun getDiskCacheKey ()Ljava/lang/String;
	public final fun getDiskCachePolicy ()Lcoil/request/CachePolicy;
	public final fun getErrorFactory ()Lkotlin/jvm/functions/Function0;
	public final fun getExtras ()Lcoil/Extras;
	public final fun getFallbackFactory ()Lkotlin/jvm/functions/Function0;
	public final fun getFetcherDispatcher ()Lkotlinx/coroutines/CoroutineDispatcher;
	public final fun getFetcherFactory ()Lkotlin/Pair;
	public final fun getInterceptorDispatcher ()Lkotlinx/coroutines/CoroutineDispatcher;
	public final fun getListener ()Lcoil/request/ImageRequest$Listener;
	public final fun getMemoryCacheKey ()Ljava/lang/String;
	public final fun getMemoryCacheKeyExtras ()Ljava/util/Map;
	public final fun getMemoryCachePolicy ()Lcoil/request/CachePolicy;
	public final fun getNetworkCachePolicy ()Lcoil/request/CachePolicy;
	public final fun getPlaceholderFactory ()Lkotlin/jvm/functions/Function0;
	public final fun getPlaceholderMemoryCacheKey ()Lcoil/memory/MemoryCache$Key;
	public final fun getPrecision ()Lcoil/size/Precision;
	public final fun getScale ()Lcoil/size/Scale;
	public final fun getSizeResolver ()Lcoil/size/SizeResolver;
	public final fun getTarget ()Lcoil/target/Target;
	public fun hashCode ()I
	public final fun newBuilder ()Lcoil/request/ImageRequest$Builder;
	public final fun newBuilder (Lcoil/PlatformContext;)Lcoil/request/ImageRequest$Builder;
	public static synthetic fun newBuilder$default (Lcoil/request/ImageRequest;Lcoil/PlatformContext;ILjava/lang/Object;)Lcoil/request/ImageRequest$Builder;
	public fun toString ()Ljava/lang/String;
}

public final class coil/request/ImageRequest$Builder {
	public fun <init> (Lcoil/PlatformContext;)V
	public fun <init> (Lcoil/request/ImageRequest;)V
	public fun <init> (Lcoil/request/ImageRequest;Lcoil/PlatformContext;)V
	public synthetic fun <init> (Lcoil/request/ImageRequest;Lcoil/PlatformContext;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lcoil/request/ImageRequest;
	public final fun data (Ljava/lang/Object;)Lcoil/request/ImageRequest$Builder;
	public final fun decoderDispatcher (Lkotlinx/coroutines/CoroutineDispatcher;)Lcoil/request/ImageRequest$Builder;
	public final fun decoderFactory (Lcoil/decode/Decoder$Factory;)Lcoil/request/ImageRequest$Builder;
	public final fun defaults (Lcoil/request/ImageRequest$Defaults;)Lcoil/request/ImageRequest$Builder;
	public final fun diskCacheKey (Ljava/lang/String;)Lcoil/request/ImageRequest$Builder;
	public final fun diskCachePolicy (Lcoil/request/CachePolicy;)Lcoil/request/ImageRequest$Builder;
	public final fun dispatcher (Lkotlinx/coroutines/CoroutineDispatcher;)Lcoil/request/ImageRequest$Builder;
	public final fun error (Lcoil/Image;)Lcoil/request/ImageRequest$Builder;
	public final fun error (Lkotlin/jvm/functions/Function0;)Lcoil/request/ImageRequest$Builder;
	public final fun fallback (Lcoil/Image;)Lcoil/request/ImageRequest$Builder;
	public final fun fallback (Lkotlin/jvm/functions/Function0;)Lcoil/request/ImageRequest$Builder;
	public final fun fetcherDispatcher (Lkotlinx/coroutines/CoroutineDispatcher;)Lcoil/request/ImageRequest$Builder;
	public final fun fetcherFactory (Lcoil/fetch/Fetcher$Factory;Lkotlin/reflect/KClass;)Lcoil/request/ImageRequest$Builder;
	public final fun getExtras ()Lcoil/Extras$Builder;
	public final fun interceptorDispatcher (Lkotlinx/coroutines/CoroutineDispatcher;)Lcoil/request/ImageRequest$Builder;
	public final fun listener (Lcoil/request/ImageRequest$Listener;)Lcoil/request/ImageRequest$Builder;
	public final fun listener (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;)Lcoil/request/ImageRequest$Builder;
	public static synthetic fun listener$default (Lcoil/request/ImageRequest$Builder;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lcoil/request/ImageRequest$Builder;
	public final fun memoryCacheKey (Lcoil/memory/MemoryCache$Key;)Lcoil/request/ImageRequest$Builder;
	public final fun memoryCacheKey (Ljava/lang/String;)Lcoil/request/ImageRequest$Builder;
	public final fun memoryCacheKeyExtra (Ljava/lang/String;Ljava/lang/String;)Lcoil/request/ImageRequest$Builder;
	public final fun memoryCacheKeyExtras (Ljava/util/Map;)Lcoil/request/ImageRequest$Builder;
	public final fun memoryCachePolicy (Lcoil/request/CachePolicy;)Lcoil/request/ImageRequest$Builder;
	public final fun networkCachePolicy (Lcoil/request/CachePolicy;)Lcoil/request/ImageRequest$Builder;
	public final fun placeholder (Lcoil/Image;)Lcoil/request/ImageRequest$Builder;
	public final fun placeholder (Lkotlin/jvm/functions/Function0;)Lcoil/request/ImageRequest$Builder;
	public final fun placeholderMemoryCacheKey (Lcoil/memory/MemoryCache$Key;)Lcoil/request/ImageRequest$Builder;
	public final fun placeholderMemoryCacheKey (Ljava/lang/String;)Lcoil/request/ImageRequest$Builder;
	public final fun precision (Lcoil/size/Precision;)Lcoil/request/ImageRequest$Builder;
	public final fun scale (Lcoil/size/Scale;)Lcoil/request/ImageRequest$Builder;
	public final fun size (I)Lcoil/request/ImageRequest$Builder;
	public final fun size (II)Lcoil/request/ImageRequest$Builder;
	public final fun size (Lcoil/size/Dimension;Lcoil/size/Dimension;)Lcoil/request/ImageRequest$Builder;
	public final fun size (Lcoil/size/Size;)Lcoil/request/ImageRequest$Builder;
	public final fun size (Lcoil/size/SizeResolver;)Lcoil/request/ImageRequest$Builder;
	public final fun target (Lcoil/target/Target;)Lcoil/request/ImageRequest$Builder;
	public final fun target (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lcoil/request/ImageRequest$Builder;
	public static synthetic fun target$default (Lcoil/request/ImageRequest$Builder;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lcoil/request/ImageRequest$Builder;
}

public final class coil/request/ImageRequest$Defaults {
	public static final field Companion Lcoil/request/ImageRequest$Defaults$Companion;
	public static final field DEFAULT Lcoil/request/ImageRequest$Defaults;
	public fun <init> ()V
	public fun <init> (Lkotlinx/coroutines/CoroutineDispatcher;Lkotlinx/coroutines/CoroutineDispatcher;Lkotlinx/coroutines/CoroutineDispatcher;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lcoil/size/Precision;Lcoil/Extras;)V
	public synthetic fun <init> (Lkotlinx/coroutines/CoroutineDispatcher;Lkotlinx/coroutines/CoroutineDispatcher;Lkotlinx/coroutines/CoroutineDispatcher;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lcoil/size/Precision;Lcoil/Extras;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lkotlinx/coroutines/CoroutineDispatcher;
	public final fun component10 ()Lcoil/size/Precision;
	public final fun component11 ()Lcoil/Extras;
	public final fun component2 ()Lkotlinx/coroutines/CoroutineDispatcher;
	public final fun component3 ()Lkotlinx/coroutines/CoroutineDispatcher;
	public final fun component4 ()Lcoil/request/CachePolicy;
	public final fun component5 ()Lcoil/request/CachePolicy;
	public final fun component6 ()Lcoil/request/CachePolicy;
	public final fun component7 ()Lkotlin/jvm/functions/Function0;
	public final fun component8 ()Lkotlin/jvm/functions/Function0;
	public final fun component9 ()Lkotlin/jvm/functions/Function0;
	public final fun copy (Lkotlinx/coroutines/CoroutineDispatcher;Lkotlinx/coroutines/CoroutineDispatcher;Lkotlinx/coroutines/CoroutineDispatcher;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lcoil/size/Precision;Lcoil/Extras;)Lcoil/request/ImageRequest$Defaults;
	public static synthetic fun copy$default (Lcoil/request/ImageRequest$Defaults;Lkotlinx/coroutines/CoroutineDispatcher;Lkotlinx/coroutines/CoroutineDispatcher;Lkotlinx/coroutines/CoroutineDispatcher;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lcoil/size/Precision;Lcoil/Extras;ILjava/lang/Object;)Lcoil/request/ImageRequest$Defaults;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDecoderDispatcher ()Lkotlinx/coroutines/CoroutineDispatcher;
	public final fun getDiskCachePolicy ()Lcoil/request/CachePolicy;
	public final fun getErrorFactory ()Lkotlin/jvm/functions/Function0;
	public final fun getExtras ()Lcoil/Extras;
	public final fun getFallbackFactory ()Lkotlin/jvm/functions/Function0;
	public final fun getFetcherDispatcher ()Lkotlinx/coroutines/CoroutineDispatcher;
	public final fun getInterceptorDispatcher ()Lkotlinx/coroutines/CoroutineDispatcher;
	public final fun getMemoryCachePolicy ()Lcoil/request/CachePolicy;
	public final fun getNetworkCachePolicy ()Lcoil/request/CachePolicy;
	public final fun getPlaceholderFactory ()Lkotlin/jvm/functions/Function0;
	public final fun getPrecision ()Lcoil/size/Precision;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class coil/request/ImageRequest$Defaults$Companion {
}

public final class coil/request/ImageRequest$Defined {
	public fun <init> (Lkotlinx/coroutines/CoroutineDispatcher;Lkotlinx/coroutines/CoroutineDispatcher;Lkotlinx/coroutines/CoroutineDispatcher;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lcoil/size/SizeResolver;Lcoil/size/Scale;Lcoil/size/Precision;)V
	public final fun component1 ()Lkotlinx/coroutines/CoroutineDispatcher;
	public final fun component10 ()Lcoil/size/SizeResolver;
	public final fun component11 ()Lcoil/size/Scale;
	public final fun component12 ()Lcoil/size/Precision;
	public final fun component2 ()Lkotlinx/coroutines/CoroutineDispatcher;
	public final fun component3 ()Lkotlinx/coroutines/CoroutineDispatcher;
	public final fun component4 ()Lcoil/request/CachePolicy;
	public final fun component5 ()Lcoil/request/CachePolicy;
	public final fun component6 ()Lcoil/request/CachePolicy;
	public final fun component7 ()Lkotlin/jvm/functions/Function0;
	public final fun component8 ()Lkotlin/jvm/functions/Function0;
	public final fun component9 ()Lkotlin/jvm/functions/Function0;
	public final fun copy (Lkotlinx/coroutines/CoroutineDispatcher;Lkotlinx/coroutines/CoroutineDispatcher;Lkotlinx/coroutines/CoroutineDispatcher;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lcoil/size/SizeResolver;Lcoil/size/Scale;Lcoil/size/Precision;)Lcoil/request/ImageRequest$Defined;
	public static synthetic fun copy$default (Lcoil/request/ImageRequest$Defined;Lkotlinx/coroutines/CoroutineDispatcher;Lkotlinx/coroutines/CoroutineDispatcher;Lkotlinx/coroutines/CoroutineDispatcher;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lcoil/size/SizeResolver;Lcoil/size/Scale;Lcoil/size/Precision;ILjava/lang/Object;)Lcoil/request/ImageRequest$Defined;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDecoderDispatcher ()Lkotlinx/coroutines/CoroutineDispatcher;
	public final fun getDiskCachePolicy ()Lcoil/request/CachePolicy;
	public final fun getErrorFactory ()Lkotlin/jvm/functions/Function0;
	public final fun getFallbackFactory ()Lkotlin/jvm/functions/Function0;
	public final fun getFetcherDispatcher ()Lkotlinx/coroutines/CoroutineDispatcher;
	public final fun getInterceptorDispatcher ()Lkotlinx/coroutines/CoroutineDispatcher;
	public final fun getMemoryCachePolicy ()Lcoil/request/CachePolicy;
	public final fun getNetworkCachePolicy ()Lcoil/request/CachePolicy;
	public final fun getPlaceholderFactory ()Lkotlin/jvm/functions/Function0;
	public final fun getPrecision ()Lcoil/size/Precision;
	public final fun getScale ()Lcoil/size/Scale;
	public final fun getSizeResolver ()Lcoil/size/SizeResolver;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class coil/request/ImageRequest$Listener {
	public fun onCancel (Lcoil/request/ImageRequest;)V
	public fun onError (Lcoil/request/ImageRequest;Lcoil/request/ErrorResult;)V
	public fun onStart (Lcoil/request/ImageRequest;)V
	public fun onSuccess (Lcoil/request/ImageRequest;Lcoil/request/SuccessResult;)V
}

public final class coil/request/ImageRequestsKt {
	public static final fun crossfade (Lcoil/ImageLoader$Builder;I)Lcoil/ImageLoader$Builder;
	public static final fun crossfade (Lcoil/ImageLoader$Builder;Z)Lcoil/ImageLoader$Builder;
	public static final fun crossfade (Lcoil/request/ImageRequest$Builder;I)Lcoil/request/ImageRequest$Builder;
	public static final fun crossfade (Lcoil/request/ImageRequest$Builder;Z)Lcoil/request/ImageRequest$Builder;
	public static final fun getCrossfadeMillis (Lcoil/request/ImageRequest;)I
}

public abstract interface class coil/request/ImageResult {
	public abstract fun getImage ()Lcoil/Image;
	public abstract fun getRequest ()Lcoil/request/ImageRequest;
}

public final class coil/request/NullRequestData {
	public static final field INSTANCE Lcoil/request/NullRequestData;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class coil/request/NullRequestDataException : java/lang/RuntimeException {
	public fun <init> ()V
}

public final class coil/request/Options {
	public fun <init> (Lcoil/PlatformContext;Lcoil/size/Size;Lcoil/size/Scale;ZLjava/lang/String;Lokio/FileSystem;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;Lcoil/Extras;)V
	public synthetic fun <init> (Lcoil/PlatformContext;Lcoil/size/Size;Lcoil/size/Scale;ZLjava/lang/String;Lokio/FileSystem;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;Lcoil/Extras;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lcoil/PlatformContext;
	public final fun component10 ()Lcoil/Extras;
	public final fun component2 ()Lcoil/size/Size;
	public final fun component3 ()Lcoil/size/Scale;
	public final fun component4 ()Z
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Lokio/FileSystem;
	public final fun component7 ()Lcoil/request/CachePolicy;
	public final fun component8 ()Lcoil/request/CachePolicy;
	public final fun component9 ()Lcoil/request/CachePolicy;
	public final fun copy (Lcoil/PlatformContext;Lcoil/size/Size;Lcoil/size/Scale;ZLjava/lang/String;Lokio/FileSystem;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;Lcoil/Extras;)Lcoil/request/Options;
	public static synthetic fun copy$default (Lcoil/request/Options;Lcoil/PlatformContext;Lcoil/size/Size;Lcoil/size/Scale;ZLjava/lang/String;Lokio/FileSystem;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;Lcoil/Extras;ILjava/lang/Object;)Lcoil/request/Options;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAllowInexactSize ()Z
	public final fun getContext ()Lcoil/PlatformContext;
	public final fun getDiskCacheKey ()Ljava/lang/String;
	public final fun getDiskCachePolicy ()Lcoil/request/CachePolicy;
	public final fun getExtras ()Lcoil/Extras;
	public final fun getFileSystem ()Lokio/FileSystem;
	public final fun getMemoryCachePolicy ()Lcoil/request/CachePolicy;
	public final fun getNetworkCachePolicy ()Lcoil/request/CachePolicy;
	public final fun getScale ()Lcoil/size/Scale;
	public final fun getSize ()Lcoil/size/Size;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class coil/request/SuccessResult : coil/request/ImageResult {
	public fun <init> (Lcoil/Image;Lcoil/request/ImageRequest;Lcoil/decode/DataSource;Lcoil/memory/MemoryCache$Key;Ljava/lang/String;ZZ)V
	public synthetic fun <init> (Lcoil/Image;Lcoil/request/ImageRequest;Lcoil/decode/DataSource;Lcoil/memory/MemoryCache$Key;Ljava/lang/String;ZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lcoil/Image;
	public final fun component2 ()Lcoil/request/ImageRequest;
	public final fun component3 ()Lcoil/decode/DataSource;
	public final fun component4 ()Lcoil/memory/MemoryCache$Key;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Z
	public final fun component7 ()Z
	public final fun copy (Lcoil/Image;Lcoil/request/ImageRequest;Lcoil/decode/DataSource;Lcoil/memory/MemoryCache$Key;Ljava/lang/String;ZZ)Lcoil/request/SuccessResult;
	public static synthetic fun copy$default (Lcoil/request/SuccessResult;Lcoil/Image;Lcoil/request/ImageRequest;Lcoil/decode/DataSource;Lcoil/memory/MemoryCache$Key;Ljava/lang/String;ZZILjava/lang/Object;)Lcoil/request/SuccessResult;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDataSource ()Lcoil/decode/DataSource;
	public final fun getDiskCacheKey ()Ljava/lang/String;
	public fun getImage ()Lcoil/Image;
	public final fun getMemoryCacheKey ()Lcoil/memory/MemoryCache$Key;
	public fun getRequest ()Lcoil/request/ImageRequest;
	public fun hashCode ()I
	public final fun isPlaceholderCached ()Z
	public final fun isSampled ()Z
	public fun toString ()Ljava/lang/String;
}

public abstract interface class coil/size/Dimension {
}

public final class coil/size/Dimension$Pixels : coil/size/Dimension {
	public final field px I
	public fun <init> (I)V
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class coil/size/Dimension$Undefined : coil/size/Dimension {
	public static final field INSTANCE Lcoil/size/Dimension$Undefined;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class coil/size/DimensionKt {
	public static final fun Dimension (I)Lcoil/size/Dimension$Pixels;
	public static final fun pxOrElse (Lcoil/size/Dimension;Lkotlin/jvm/functions/Function0;)I
}

public final class coil/size/Precision : java/lang/Enum {
	public static final field AUTOMATIC Lcoil/size/Precision;
	public static final field EXACT Lcoil/size/Precision;
	public static final field INEXACT Lcoil/size/Precision;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lcoil/size/Precision;
	public static fun values ()[Lcoil/size/Precision;
}

public final class coil/size/Scale : java/lang/Enum {
	public static final field FILL Lcoil/size/Scale;
	public static final field FIT Lcoil/size/Scale;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lcoil/size/Scale;
	public static fun values ()[Lcoil/size/Scale;
}

public final class coil/size/Size {
	public static final field Companion Lcoil/size/Size$Companion;
	public static final field ORIGINAL Lcoil/size/Size;
	public fun <init> (Lcoil/size/Dimension;Lcoil/size/Dimension;)V
	public final fun component1 ()Lcoil/size/Dimension;
	public final fun component2 ()Lcoil/size/Dimension;
	public final fun copy (Lcoil/size/Dimension;Lcoil/size/Dimension;)Lcoil/size/Size;
	public static synthetic fun copy$default (Lcoil/size/Size;Lcoil/size/Dimension;Lcoil/size/Dimension;ILjava/lang/Object;)Lcoil/size/Size;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getHeight ()Lcoil/size/Dimension;
	public final fun getWidth ()Lcoil/size/Dimension;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class coil/size/Size$Companion {
}

public final class coil/size/SizeKt {
	public static final fun Size (II)Lcoil/size/Size;
	public static final fun Size (ILcoil/size/Dimension;)Lcoil/size/Size;
	public static final fun Size (Lcoil/size/Dimension;I)Lcoil/size/Size;
	public static final fun isOriginal (Lcoil/size/Size;)Z
}

public abstract interface class coil/size/SizeResolver {
	public abstract fun size (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class coil/size/SizeResolverKt {
	public static final fun create (Lcoil/size/Size;)Lcoil/size/SizeResolver;
}

public abstract interface class coil/target/Target {
	public fun onError (Lcoil/Image;)V
	public fun onStart (Lcoil/Image;)V
	public fun onSuccess (Lcoil/Image;)V
}

public final class coil/util/DebugLogger : coil/util/Logger {
	public fun <init> ()V
	public fun <init> (Lcoil/util/Logger$Level;)V
	public synthetic fun <init> (Lcoil/util/Logger$Level;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getMinLevel ()Lcoil/util/Logger$Level;
	public fun log (Ljava/lang/String;Lcoil/util/Logger$Level;Ljava/lang/String;Ljava/lang/Throwable;)V
	public fun setMinLevel (Lcoil/util/Logger$Level;)V
}

public abstract interface class coil/util/Logger {
	public abstract fun getMinLevel ()Lcoil/util/Logger$Level;
	public abstract fun log (Ljava/lang/String;Lcoil/util/Logger$Level;Ljava/lang/String;Ljava/lang/Throwable;)V
	public abstract fun setMinLevel (Lcoil/util/Logger$Level;)V
}

public final class coil/util/Logger$Level : java/lang/Enum {
	public static final field Debug Lcoil/util/Logger$Level;
	public static final field Error Lcoil/util/Logger$Level;
	public static final field Info Lcoil/util/Logger$Level;
	public static final field Verbose Lcoil/util/Logger$Level;
	public static final field Warn Lcoil/util/Logger$Level;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lcoil/util/Logger$Level;
	public static fun values ()[Lcoil/util/Logger$Level;
}

public final class coil/util/MimeTypeMap {
	public static final field INSTANCE Lcoil/util/MimeTypeMap;
	public final fun getMimeTypeFromExtension (Ljava/lang/String;)Ljava/lang/String;
	public final fun getMimeTypeFromUrl (Ljava/lang/String;)Ljava/lang/String;
}

